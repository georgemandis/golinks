name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      
      - name: Set platform variables
        id: platform
        run: |
          case ${{ matrix.target }} in
            x86_64-unknown-linux-gnu)
              echo "os=linux" >> $GITHUB_OUTPUT
              echo "arch=x64" >> $GITHUB_OUTPUT
              echo "ext=" >> $GITHUB_OUTPUT
              ;;
            x86_64-pc-windows-msvc)
              echo "os=windows" >> $GITHUB_OUTPUT
              echo "arch=x64" >> $GITHUB_OUTPUT
              echo "ext=.exe" >> $GITHUB_OUTPUT
              ;;
            x86_64-apple-darwin)
              echo "os=darwin" >> $GITHUB_OUTPUT
              echo "arch=x64" >> $GITHUB_OUTPUT
              echo "ext=" >> $GITHUB_OUTPUT
              ;;
            aarch64-apple-darwin)
              echo "os=darwin" >> $GITHUB_OUTPUT
              echo "arch=arm64" >> $GITHUB_OUTPUT
              echo "ext=" >> $GITHUB_OUTPUT
              ;;
          esac
      
      - name: Compile executable
        run: |
          deno compile --allow-read --allow-write --allow-env --allow-net --allow-run --target=${{ matrix.target }} --output=golinks-${{ github.ref_name }}-${{ steps.platform.outputs.os }}-${{ steps.platform.outputs.arch }}${{ steps.platform.outputs.ext }} cli.ts
      
      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: golinks-${{ github.ref_name }}-${{ steps.platform.outputs.os }}-${{ steps.platform.outputs.arch }}
          path: golinks-${{ github.ref_name }}-${{ steps.platform.outputs.os }}-${{ steps.platform.outputs.arch }}${{ steps.platform.outputs.ext }}

  create-release:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: artifacts/*/golinks-*